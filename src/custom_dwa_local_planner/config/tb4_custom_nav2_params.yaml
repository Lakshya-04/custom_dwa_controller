# ~/custom_dwa_controller/src/custom_dwa_local_planner/config/tb4_custom_nav2_params.yaml

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001

    # We will use the simple progress checker and goal checker
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["goal_checker"]

    # Here we list our custom controller and give it the name "FollowPath"
    controller_plugins: ["FollowPath"]

    # Configuration for our custom controller plugin
    FollowPath:
      plugin: "custom_dwa_local_planner/CustomDWAPlanner"
      # You can add any custom parameters your DWA planner needs here
      # For example:
      # max_speed_x: 0.26
      # max_speed_theta: 1.0

    # Configuration for the progress checker
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    # Configuration for the goal checker
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
      stateful: True

# controller_server:
#   ros__parameters:
#     use_sim_time: True
#     controller_frequency: 10.0
#     controller_plugins: ["FollowPath"]

#     FollowPath:
#       plugin: "custom_dwa_local_planner/CustomDWAPlanner"
#       # DWA Parameters
#       sim_time: 1.7          # [s] Simulation time for trajectory prediction
#       max_speed_x: 0.22      # [m/s]
#       min_speed_x: 0.0       # [m/s]
#       max_speed_theta: 1.0   # [rad/s]
#       min_speed_theta: -1.0  # [rad/s]
#       acc_lim_x: 2.5         # [m/s^2]
#       acc_lim_theta: 3.2     # [rad/s^2]
#       v_samples: 20          # Number of linear velocity samples
#       w_samples: 40          # Number of angular velocity samples

#       # Cost Function Weights
#       goal_dist_scale: 5.0    # Weight for aiming towards the lookahead point
#       path_dist_scale: 32.0   # Weight for staying on the global path
#       occdist_scale: 0.02    # Weight for avoiding obstacles
#       heading_scale: 15.0     # Weight for correct orientation

# # Add other necessary Nav2 server configs
# bt_navigator:
#   ros__parameters:
#     use_sim_time: True
#     global_frame: map
#     robot_base_frame: base_link
#     odom_topic: /odom

# planner_server:
#   ros__parameters:
#     use_sim_time: True

# goal_checker:
#   ros__parameters:
#     use_sim_time: True